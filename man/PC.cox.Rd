% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/main.R
\name{PC.Cox}
\alias{PC.Cox}
\title{Fit a partly conditional Cox model}
\usage{
PC.Cox(id, stime, status, measurement.time, predictors, data,
  additional.formula.pars = NULL)
}
\arguments{
\item{id}{name of numeric subject id in data}

\item{stime}{name of survival time, may be repeated across subj. id.}

\item{status}{name of survival status indicator, generally 1 = bad outcome/death, 0 alive/censored.}

\item{measurement.time}{name of time of measurement from baseline.}

\item{predictors}{character vector of names for predictors and covariates to include in the model.}

\item{data}{data.frame with id, stime, status, measurement time  and predictor variables. Observations with missing data will be removed.}
}
\value{
An object of class "PC_cox" which is a list containing:

\item{model.fit }{ A 'coxph' fit object . Please note that the estimates of standard error associated with the model coefficients DO NOT incorporate the variation due to marker smoothing using BLUPs. }
\item{variable.names }{vector of variable names used to fit the model. }
\item{call}{Function call. }
#'
}
\description{
Fit a partly conditional (PC) Cox model. PC models are helpful predictive tools for (medical) contexts where long-term follow-up is available and interest lies in predicting patientsâ€™ risks for a future adverse outcome using repeatedly measured predictors over time. These methods model the risk of an adverse event conditional on survival up to a landmark time and information accrued by that time. Methods to smooth markers through time using mixed effect models and BLUP estimates are also implemented.
}
\examples{

data(pc_data)
#log transform measurement time for use in models.
pc_data$log.meas.time <- log10(pc_data$meas.time + 1)

pc.model.1 <-  PC.Cox(
 id = "sub.id",
 stime = "time",
 status = "status",
 measurement.time = "meas.time",
 predictors = c("log.meas.time", "marker_1", "marker_2"),
 data = pc_data)

pc.model.1

pc.model.1$model.fit #direct access to the coxph model object

#fit a model using
# BLUPs to smooth marker measurements.

#fit mixed effects model to use for blups
myblup.marker1 <- BLUP(marker = "marker_1",
                      measurement.time = "meas.time",
                      fixed = c("log.meas.time"),
                      random = c("log.meas.time"),
                      id = "sub.id" ,
                      data = pc_data )

#adding blup estimates to pc_data
fitted.blup.values.m1 <- predict(myblup.marker1, newdata = pc_data)

#fitted.blup.values.m1 includes the fitted blup value
pc_data$marker_1_blup <- fitted.blup.values.m1$fitted.blup


pc.model.2 <-  PC.Cox(
 id = "sub.id",
 stime = "time",
 status = "status",
 measurement.time = "meas.time",
 predictors = c("log.meas.time", "marker_1_blup", "marker_2"),
 data = pc_data)

pc.model.2

}
\seealso{
\code{\link[partlyconditional]{BLUP}} \code{\link[partlyconditional]{PC.GLM}}
}
